import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'


android {

    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultConfig {
        applicationId "com.arksine.easycam"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName = "1.1"

        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
    }

    productFlavors {

    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a'
            universalApk true
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    // call regular ndk-build(.cmd) script from app directory
    task ndkBuild(type: Exec) {
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine 'ndk-build.cmd', '-C', file('src/main').absolutePath
        } else {
            commandLine 'ndk-build', '-C', file('src/main').absolutePath
        }
    }

    task ndkClean(type: Exec, description: 'Clean JNI object files') {
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine 'ndk-build.cmd', '-C', file('src/main').absolutePath, 'clean'
        } else {
            commandLine 'ndk-build', '-C', file('src/main').absolutePath, 'clean'
        }
    }

    clean.dependsOn 'ndkClean'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

}




dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-annotations:23.1.1'
    compile 'com.android.support:support-v13:23.1.1'
}
